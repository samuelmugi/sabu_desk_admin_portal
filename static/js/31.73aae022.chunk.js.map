{"version":3,"sources":["../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","jdcomponents/Users/AddUserGroup.js"],"names":["DialogTitle","React","props","ref","children","classes","className","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","variant","withStyles","margin","padding","flex","name","CREATE_USER","process","REACT_APP_KB_PORTAL_USER_FETCHADDETIALS","REACT_APP_KB_PORTAL_USER_CREATE","UPDATE_USER","REACT_APP_KB_PORTAL_USER_UPDATE","useStyles","makeStyles","theme","fab","spacing","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","AddUserGroup","useState","open","setOpen","loadingRef","color","fullWidth","maxWidth","allRoles","setSubmitted","isSubmittedRef","setRolePermissions","username","email","firstName","lastName","userRole","userStatus","setUserValuesErrors","userValuesErrorsRef","valueIntoModal","userValues","setUserValues","userValuesRef","useEffect","a","action","current","permissions","changeHandler","e","prevValues","target","value","validateValues","hasErrors","user","userErrors","Object","keys","map","key","undefined","console","log","saveUser","preventDefault","authorities","url","id","BackendService","postRequest","then","response","data","requestStatus","notifySuccess","message","notifyError","catch","error","resetBtn","handleClickOpen","handleClose","Fragment","content","trigger","positive","onClick","icon","disableBackdropClick","disableEscapeKeyDown","onClose","aria-labelledby","active","spinner","loading","Group","widths","Input","fluid","label","placeholder","pointing","onChange","disabled","type","primary","defaultProps"],"mappings":"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","file":"static/js/31.73aae022.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useState from 'react-usestateref';\nimport {Button, Form, Popup, Select} from 'semantic-ui-react';\nimport Aux from '../../hoc/_Aux';\nimport BackendService from \"../../services/BackendService\";\nimport LoadingOverlay from 'react-loading-overlay'\nimport ClipLoader from \"react-spinners/PropagateLoader\";\n\nconst FETCH_LDAP_DETAILS = process.env.REACT_APP_KB_PORTAL_USER_FETCHADDETIALS;\nconst CREATE_USER = process.env.REACT_APP_KB_PORTAL_USER_CREATE;\nconst UPDATE_USER = process.env.REACT_APP_KB_PORTAL_USER_UPDATE;\n\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: theme.spacing(1)\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content'\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1)\n    }\n}));\n\nconst AddUserGroup = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading, loadingRef] = useState(false);\n    const [color, setColor] = useState(\"#60991f\");\n    const [mounted, setMount] = useState(false);\n    const [fullWidth, setFullWidth] = useState(true);\n    const [maxWidth, setMaxWidth] = useState('sm');\n    const [allRoles, setAllRoles, allRolesref] = useState(props?.allRoles);\n    const [isSubmitted, setSubmitted, isSubmittedRef] = useState(false);\n    const [rolePermissions, setRolePermissions, rolePermissionsRef] = useState([]);\n    const [userValuesErrors, setUserValuesErrors, userValuesErrorsRef] = useState({\n        username: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        userRole: '',\n        userStatus: ''\n    });\n    const [userValues, setUserValues, userValuesRef] = useState(props?.valueIntoModal);\n    useEffect(() => {\n        (async function () {\n            if (props.action === 'edit') {\n                setRolePermissions(userValuesRef.current?.userRole.permissions);\n            }\n\n        })();\n    }, [userValues]);\n\n    const changeHandler = (e) => {\n        setUserValues((prevValues) => {\n            return {...prevValues, [e.target.name]: e.target.value};\n        });\n    };\n    const updateUserValues = (name, value) => {\n        setUserValues((prevValues) => {\n            return {...prevValues, [name]: value};\n        });\n    };\n    const validateValues = () => {\n        let hasErrors = false;\n\n        const user = userValuesRef.current;\n        const userErrors = userValuesErrorsRef.current;\n        setUserValuesErrors({\n            username: '',\n            email: '',\n            firstName: '',\n            lastName: '',\n            userRole: '',\n            userStatus: ''\n        });\n        Object.keys(userErrors).map((key) => {\n            if (user[key] === null || user[key] === '' || user[key] === undefined) {\n                console.log(key + ' key and value is ' + user[key]);\n                setUserValuesErrors((prevValues) => {\n                    return {...prevValues, [key]: key + ' is required'};\n                });\n                hasErrors = true\n                ;\n            }\n        });\n\n        return hasErrors;\n    }\n    const saveUser = async (e) => {\n        e.preventDefault();\n        setSubmitted(true);\n        const hasErrors = validateValues();\n        if (!hasErrors) {\n            delete userValuesRef.current?.authorities;\n            const url = props.action === 'add' ? CREATE_USER : UPDATE_USER + '/' + userValuesRef.current?.id;\n            await BackendService.postRequest(url, userValuesRef.current)\n                .then((response) => {\n                    const data = response.data;\n\n                    if (data?.requestStatus) {\n                        BackendService.notifySuccess(data.message);\n\n                    } else {\n                        BackendService.notifyError(data.message);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    BackendService.notifyError('Oops... Something went wrong!!!');\n                });\n            resetBtn(e);\n        }\n    };\n\n\n    const resetBtn = async () => {\n        setSubmitted(false);\n        setRolePermissions([]);\n        setUserValues({\n            username: '',\n            email: '',\n            firstName: '',\n            lastName: '',\n            userRole: '',\n            userStatus: ''\n        });\n        setUserValuesErrors({\n            username: '',\n            email: '',\n            firstName: '',\n            lastName: '',\n            userRole: '',\n            userStatus: ''\n        });\n    };\n\n    const fetchADDetails = async () => {\n        const userName = userValuesRef.current.username;\n        try {\n            const response = await BackendService.getRequest(\n                FETCH_LDAP_DETAILS + '?username=' + userName\n            );\n            const data = JSON.parse(response.data?.payload);\n            const username = data?.accountname;\n            updateUserValues('username', username);\n\n            const firstname = data?.firstname;\n            updateUserValues('firstName', firstname);\n\n            const email = data?.email;\n            updateUserValues('email', email);\n\n            const lastname = data?.lastname;\n            updateUserValues('lastName', lastname);\n\n            console.log('userValuesRef==' + JSON.stringify(userValuesRef.current));\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    const handleRoleChange = async (e, {value}) => {\n        setRolePermissions(JSON.parse(value)?.permissions);\n        updateUserValues('userRole', JSON.parse(value));\n    };\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const stringToHash = (string) => {\n        var hash = 0;\n        if (string.length == 0) return hash;\n        for (let i = 0; i < string.length; i++) {\n            let char = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash;\n        }\n        return hash;\n    }\n\n\n    return (\n        <Aux>\n            <React.Fragment>\n                <Popup\n                    content={props?.action === 'add' ? \"Add User\" : \"Edit User\"}\n                    trigger={\n                        (props?.action === 'add'\n                            ? (<Button positive onClick={handleClickOpen} icon=\"add\"/>)\n                            : (<Button onClick={handleClickOpen} icon=\"edit\"/>))\n\n                    }\n                />\n\n                <Dialog\n                    disableBackdropClick\n                    disableEscapeKeyDown\n                    fullWidth={fullWidth}\n                    maxWidth={maxWidth}\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <LoadingOverlay\n                        active={loadingRef.current}\n                        spinner={<ClipLoader color={color} loading={loadingRef.current}/>}\n                    >\n                        <DialogTitle\n                            id=\"max-width-dialog-title\">{props?.action === 'add' ? \"Add User\" : \"Edit User\"}</DialogTitle>\n                        <DialogContent>\n                            <Form>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"Group Name\"\n                                        placeholder=\"Group Name\"\n                                        name=\"GroupName\"\n                                        error={userValuesErrorsRef.current?.firstName === '' ? false : {\n                                            content: userValuesErrorsRef.current?.firstName,\n                                            pointing: 'below'\n                                        }} value={userValuesRef.current?.firstName}\n                                        onChange={changeHandler}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"Group Description\"\n                                        placeholder=\"Group Description\"\n                                        name=\"GroupDescription\"\n                                        error={userValuesErrorsRef.current?.lastName === '' ? false : {\n                                            content: userValuesErrorsRef.current?.lastName,\n                                            pointing: 'below'\n                                        }} value={userValuesRef.current?.lastName}\n                                        onChange={changeHandler}\n                                    />\n\n\n                                </Form.Group>\n\n\n                            </Form>\n\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button.Group>\n                                <Button\n                                    disabled={isSubmittedRef.current}\n                                    type=\"submit\"\n                                    onClick={saveUser}\n                                    positive\n                                >\n                                    Save\n                                </Button>\n                                <Button onClick={resetBtn}>Reset</Button>\n                                <Button onClick={handleClose} primary>\n                                    Close\n                                </Button>\n                            </Button.Group>\n                        </DialogActions>\n                    </LoadingOverlay>\n                </Dialog>\n            </React.Fragment>\n        </Aux>\n    )\n        ;\n};\nAddUserGroup.propTypes = {\n    modalOpen: PropTypes.bool.isRequired,\n    action: PropTypes.string.isRequired,\n    valueIntoModal: PropTypes.object.isRequired,\n    allRoles: PropTypes.array.isRequired,\n};\n\nAddUserGroup.defaultProps = {};\n\nexport default AddUserGroup;\n"],"sourceRoot":""}