{"version":3,"sources":["jdcomponents/Dashboard/Default.js"],"names":["LATEST_ISSUES_URL","process","REACT_APP_KB_PORTAL_DASHBOARD_LIST_LATEST_ISSUES","SYSTEM_COUNT_URL","REACT_APP_KB_PORTAL_DASHBOARD_LIST_ALL_SYSTEM_COUNT_ISSUES","TOP_RESOLTUION_URL","REACT_APP_KB_PORTAL_DASHBOARD_TOP_RESOLTUIONS_PER_USER","Dashboard","useTheme","useState","LatestIssues","systemCountIssues","topResolutionsPerUser","setDashboardValues","dashboardValuesRef","useEffect","a","fetchData","BackendService","getRequest","response","data","payload","prevValues","console","error","sysIssues","map","iss","push","system","_id","SYSTEM","noOfIssues","count","tabContent","current","person","className","href","DEMO","BLANK_LINK","style","width","src","avatar1","alt","resolutionBy","countResols","Body","height","margin","top","right","left","bottom","barSize","dataKey","scale","padding","strokeDasharray","fill","background","Header","Title","as","responsive","hover","issue","index","title","bankSystem","systemName","createdBy","moment","createdOn","format","defaultActiveKey","id","eventKey"],"mappings":"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","file":"static/js/21.226c73dc.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Card, Col, Row, Tab, Table, Tabs} from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\nimport avatar1 from '../../assets/images/user/avatar-1.jpg';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport BackendService from '../../services/BackendService';\r\nimport useState from 'react-usestateref';\r\nimport moment from 'moment';\r\nimport {Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis} from 'recharts';\r\n\r\n\r\n\r\nfunction createData(time, amount) {\r\n    return {time, amount};\r\n}\r\n\r\nconst LATEST_ISSUES_URL = process.env.REACT_APP_KB_PORTAL_DASHBOARD_LIST_LATEST_ISSUES;\r\nconst SYSTEM_COUNT_URL = process.env.REACT_APP_KB_PORTAL_DASHBOARD_LIST_ALL_SYSTEM_COUNT_ISSUES;\r\nconst TOP_RESOLTUION_URL = process.env.REACT_APP_KB_PORTAL_DASHBOARD_TOP_RESOLTUIONS_PER_USER;\r\n\r\n\r\nconst Dashboard = () => {\r\n    const theme = useTheme();\r\n    const [modalOpen, setModalOpen, modalOpenref] = useState(false);\r\n    const [modalOpenView, setModalOpenView, modalOpenViewref] = useState(false);\r\n\r\n\r\n    const [dashboardValues, setDashboardValues, dashboardValuesRef] = useState({\r\n        LatestIssues: [],\r\n        systemCountIssues: [],\r\n        topResolutionsPerUser: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            await fetchData();\r\n        })();\r\n    }, []);\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await BackendService.getRequest(LATEST_ISSUES_URL);\r\n            const data = response.data?.payload;\r\n            setDashboardValues((prevValues) => {\r\n                return {...prevValues, LatestIssues: data};\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        try {\r\n            const response = await BackendService.getRequest(SYSTEM_COUNT_URL);\r\n            const data = response.data?.payload;\r\n            let sysIssues = [];\r\n            data.map(iss => {\r\n                sysIssues.push({system: iss._id.SYSTEM, noOfIssues: iss.count})\r\n            });\r\n            setDashboardValues((prevValues) => {\r\n                return {...prevValues, systemCountIssues: sysIssues};\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        try {\r\n            const response = await BackendService.getRequest(TOP_RESOLTUION_URL);\r\n            const data = response.data?.payload;\r\n            setDashboardValues((prevValues) => {\r\n                return {...prevValues, topResolutionsPerUser: data};\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n\r\n    const tabContent = (\r\n        <Aux>\r\n            {dashboardValuesRef.current.topResolutionsPerUser.map(person => {\r\n                return (\r\n                    <>\r\n                        <div className=\"media friendlist-box align-items-center justify-content-center m-b-20\">\r\n                            <div className=\"m-r-10 photo-table\">\r\n                                <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{width: '40px'}}\r\n                                                               src={avatar1}\r\n                                                               alt=\"activity-user\"/></a>\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <h6 className=\"m-0 d-inline\">{person?._id.resolutionBy}</h6>\r\n                                <span className=\"float-right d-flex  align-items-center\">{person?.countResols} &nbsp;\r\n                                    <i className=\"fa fa-smile-o f-22 m-r-10 text-c-yellow\"/></span>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n\r\n            })}\r\n\r\n        </Aux>\r\n    );\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h6 className='mb-4'>No Of Cases Raised to date.</h6>\r\n\r\n                            <BarChart\r\n                                width={400}\r\n                                height={300}\r\n                                data={dashboardValuesRef.current.systemCountIssues}\r\n                                margin={{\r\n                                    top: 5,\r\n                                    right: 30,\r\n                                    left: 20,\r\n                                    bottom: 5,\r\n                                }}\r\n                                barSize={20}\r\n                            >\r\n                                <XAxis dataKey=\"system\" scale=\"point\" padding={{left: 10, right: 10}}/>\r\n                                <YAxis/>\r\n                                <Tooltip/>\r\n                                <Legend/>\r\n                                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                <Bar dataKey=\"noOfIssues\" fill=\"#8884d8\" background={{fill: '#eee'}}/>\r\n                            </BarChart>\r\n                            <h6 className='mb-4'>ENZI HUB Systems</h6>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card className='Recent-Users'>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Recent Issues</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='px-0 py-2'>\r\n                            <Table responsive hover>\r\n                                <tbody>\r\n                                {dashboardValuesRef.current.LatestIssues.map((issue, index) => {\r\n                                    return (<>\r\n                                        <tr className=\"unread\">\r\n                                            <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar1}\r\n                                                     alt=\"activity-user\"/></td>\r\n                                            <td>\r\n                                                <h6 className=\"mb-1\">{issue?.title}</h6>\r\n                                                <p className=\"m-0\">\r\n                                                    {'SYSTEM:-' + issue?.bankSystem.systemName + ' raised by '\r\n                                                    + issue?.createdBy\r\n                                                    }\r\n                                                </p>\r\n                                            </td>\r\n\r\n\r\n                                            <td>\r\n                                                <h6 className=\"text-muted\"><i\r\n                                                    className=\"fa fa-circle text-c-green f-10 m-r-15\"/>{moment(issue?.createdOn).format(\"dddd, MMM Do YYYY\")}\r\n                                                </h6>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </>);\r\n\r\n                                })\r\n                                }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n\r\n                <Col className='m-b-30'>\r\n                    <Tabs defaultActiveKey=\"today\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"today\" title=\"Top Issue Resolvers..\">\r\n                            {tabContent}\r\n                        </Tab>\r\n\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}