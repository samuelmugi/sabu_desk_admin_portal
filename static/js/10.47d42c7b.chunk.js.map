{"version":3,"sources":["routes.js","services/BackendService.js","App/layout/AdminLayout/Navigation/NavLogo/index.js","App/layout/AdminLayout/Navigation/NavContent/NavIcon/index.js","App/layout/AdminLayout/Navigation/NavContent/NavBadge/index.js","App/layout/AdminLayout/Navigation/NavContent/NavItem/index.js","App/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js","App/layout/AdminLayout/Navigation/NavContent/NavGroup/index.js","App/layout/AdminLayout/Navigation/NavContent/index.js","App/layout/AdminLayout/Navigation/OutsideClick/index.js","App/layout/AdminLayout/Navigation/index.js","App/layout/AdminLayout/NavBar/NavLeft/NavSearch/index.js","App/layout/AdminLayout/NavBar/NavLeft/index.js","App/layout/AdminLayout/NavBar/index.js","App/layout/AdminLayout/index.js"],"names":["window","jQuery","$","global","routes","path","exact","name","component","React","lazy","toast","configure","headersConfig","Accept","baseURL","process","axios","interceptors","request","use","config","user","JSON","parse","sessionStorage","getItem","accessToken","token","Authorization","headers","error","position","autoClose","transition","Zoom","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","clear","response","status","Promise","reject","location","reload","BackendService","a","get","url","page","size","search","requestUrl","payload","post","put","menus","items","value","success","info","navLogo","props","toggleClass","collapseMenu","className","href","DEMO","BLANK_LINK","join","id","onClick","onToggleNavigation","navIcon","navIcons","icon","navBadge","navBadges","badge","badgeClass","type","title","NavItem","itemTitle","this","item","subContent","itemTarget","target","external","rel","NavIcon","NavBadge","layout","to","mainContent","onItemLeave","windowWidth","classes","onItemClick","Component","withRouter","connect","state","dispatch","actionTypes","windowSize","NavCollapse","document","pathname","toString","split","findIndex","collapse","onCollapseToggle","isOpen","isTrigger","navItems","children","collapses","Object","keys","map","key","navLinkClass","navItemClass","onMouseLeave","onNavCollapseLeave","onMouseEnter","menu","navGroup","group","groups","NavContent","scrollWidth","prevDisable","nextDisable","scrollPrevHandler","wrapperWidth","getElementById","clientWidth","setState","scrollNextHandler","contentWidth","navigation","NavGroup","prevClass","nextClass","onNavContentLeave","style","marginLeft","OutsideClick","setWrapperRef","bind","handleOutsideClick","addEventListener","removeEventListener","node","wrapperRef","event","contains","ref","validateMenu","Navigation","resize","onChangeLayout","navClass","preLayout","layoutType","navBackColor","navBrandColor","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navBackImage","navIconColor","navFixedLayout","navListTitleHide","body","classList","add","backgroundImage","layout6Background","backgroundSize","layout6BackSize","remove","rtlLayout","boxLayout","navContent","NavLogo","NavSearch","searchWidth","searchString","searchOnHandler","searchInterval","setInterval","clearInterval","prevSate","searchOffHandler","searchClass","placeholder","width","NavLeft","iconFullScreen","isFullScreen","NavBar","onFullScreen","headerClass","headerBackColor","headerFixedLayout","AdminLayout","fullScreenExitHandler","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","onFullScreenExit","onComponentWillMount","route","index","render","enabled","mobileOutClickHandler","Breadcrumb","fallback","Loader","from","defaultPath","configBlock"],"mappings":"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","file":"static/js/10.47d42c7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\nconst DashboardDefault = React.lazy(() => import('./jdcomponents/Dashboard/Default'));\r\n//job actions\r\nconst JobGroups = React.lazy(() => import('./jdcomponents/JobGroups/JobGroups'));\r\nconst JobPositions = React.lazy(() => import('./jdcomponents/JobPositions/JobPositions'));\r\nconst JobVacancies = React.lazy(() => import('./jdcomponents/JobVacancies/JobVacancies'));\r\nconst JobApplications = React.lazy(() => import('./jdcomponents/JobApplicants/JobApplicants'));\r\nconst JobShortlist = React.lazy(() => import('./jdcomponents/JobShortlists/JobShortlists'));\r\nconst JobInterviews = React.lazy(() => import('./jdcomponents/JobInterviews/JobInterviews'));\r\n//ADMINISTRATION\r\nconst Users = React.lazy(() => import('./jdcomponents/Users/Users'));\r\n//REPORTS\r\nconst Reports = React.lazy(() => import('./jdcomponents/Reports/Reports'));\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path: '/dashboard',\r\n        exact: true,\r\n        name: 'Default',\r\n        component: DashboardDefault\r\n    },\r\n    {\r\n        path: '/jobgroup',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobGroups\r\n    },\r\n    {\r\n        path: '/jobpositions',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobPositions\r\n    },\r\n    {\r\n        path: '/jobvacancies',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobVacancies\r\n    },\r\n    {\r\n        path: '/jobaplicants',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobApplications\r\n    },\r\n    {\r\n        path: '/jobshortlists',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobShortlist\r\n    },\r\n    {\r\n        path: '/jobinterviews',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: JobInterviews\r\n    },\r\n    {\r\n        path: '/users',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: Users\r\n    },\r\n    {\r\n        path: '/reports',\r\n        exact: true,\r\n        name: 'Resolutions',\r\n        component: Reports\r\n    }\r\n];\r\n\r\nexport default routes;\r\n","import axios from 'axios';\r\nimport menus from '../menu-items';\r\nimport {toast, Zoom} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\n\r\nconst headersConfig = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json;charset=UTF-8',\r\n    Accept: 'application/json'\r\n};\r\nconst baseURL = process.env.REACT_APP_KB_PORTAL_BASE_URL;\r\nconst UNAUTHORIZED = 401;\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use((config) => {\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n\r\n    if (user && user.accessToken) {\r\n        const token = 'Bearer ' + user.accessToken;\r\n        headersConfig.Authorization = token;\r\n        config.headers = headersConfig;\r\n    } else {\r\n         toast.error('Oops... Your session has expired. You will be redirected to the login page!', {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            transition:Zoom,            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n        // window.location.href = '/auth/signin';\r\n        sessionStorage.clear();\r\n    }\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n\r\n        if (error.response?.status === UNAUTHORIZED) {\r\n            // window.location.href = '/auth/signin';\r\n            window.location.reload(true);\r\n            sessionStorage.clear();\r\n        } else {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n\r\n    }\r\n);\r\n\r\nclass BackendService {\r\n\r\n\r\n    async getUserBoard() {\r\n        return await axios.get('/api/test/user');\r\n    }\r\n\r\n    async getPmBoard() {\r\n        return await axios.get('/api/test/pm');\r\n    }\r\n\r\n    async getAdminBoard() {\r\n        return await axios.get('/api/test/admin');\r\n    }\r\n\r\n    async getPaginatedRequest(url, page, size, search) {\r\n        const requestUrl =\r\n            baseURL +\r\n            url +\r\n            '?page=' +\r\n            page +\r\n            '&size=' +\r\n            size +\r\n            '&searchParams=' +\r\n            search;\r\n        return await axios.get(requestUrl);\r\n    }\r\n\r\n    async getRequest(url) {\r\n        const requestUrl = baseURL + url;\r\n        return await axios.get(requestUrl);\r\n    }\r\n\r\n    async postRequest(url, payload) {\r\n        const requestUrl = baseURL + url;\r\n        return await axios.post(requestUrl, payload);\r\n    }\r\n\r\n    async putRequest(url, payload) {\r\n        const requestUrl = baseURL + url;\r\n        return await axios.put(requestUrl, payload);\r\n    }\r\n\r\n    validateMenu() {\r\n        return  menus.items;\r\n        // const USER = JSON.parse(sessionStorage.getItem('user'));\r\n        //  if (USER !== null) {\r\n        //      const authorities = USER?.authorities;\r\n        //      authorities.push({\r\n        //          \"role\": \"dashboard\"\r\n        //      });\r\n        //     let navigation = [];\r\n        //      menus.items.map(menu => {\r\n        //         if (menu?.id === 'navigation') {\r\n        //             navigation.push(menu);\r\n        //         } else {\r\n        //             let mainChildMenu = menu.children[0];\r\n        //             const subMenus = [];\r\n        //             mainChildMenu.children.map(submenu => {\r\n        //                 if (authorities.some(auth => auth.role === submenu?.role)) {\r\n        //                     subMenus.push(submenu);\r\n        //                 }\r\n        //             });\r\n        //             if (subMenus.length > 0) {\r\n        //                 mainChildMenu.children = subMenus;\r\n        //\r\n        //                 menu.children = [mainChildMenu];\r\n        //\r\n        //             } else {\r\n        //                 menu.children = [];\r\n        //             }\r\n        //             navigation.push(menu);\r\n        //         }\r\n        //     });\r\n        //      return navigation;\r\n        // } else {\r\n        //       return menus.defaultMenu;\r\n        // }\r\n    }\r\n\r\n    async notifySuccess (value)  {\r\n        toast.success(value, {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            transition:Zoom,            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    async   notifyError (value) {\r\n        toast.error(value, {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            transition:Zoom,            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    async   notifyInfo (value) {\r\n        toast.info(value, {\r\n            position: \"top-right\",\r\n            autoClose: 2500,\r\n            transition:Zoom,            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default new BackendService();\r\n","import React from 'react';\r\nimport DEMO  from './../../../../../store/constant';\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\n\r\nconst navLogo = (props) => {\r\n    let toggleClass = ['mobile-menu'];\r\n    if (props.collapseMenu) {\r\n        toggleClass = [...toggleClass, 'on'];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <div className=\"navbar-brand header-logo\">\r\n                 <a href={DEMO.BLANK_LINK} className=\"b-brand\">\r\n                                  <span className=\"b-title\"> ENZI HUB JOB DESK</span>\r\n                 </a>\r\n                <a href={DEMO.BLANK_LINK} className={toggleClass.join(' ')} id=\"mobile-collapse\" onClick={props.onToggleNavigation}><span /></a>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navLogo;\r\n","import React from 'react';\r\n\r\nconst navIcon = (props) => {\r\n    let navIcons = false;\r\n    if (props.items.icon) {\r\n        navIcons = <span className=\"pcoded-micon\"><i className={props.items.icon} /></span>;\r\n    }\r\n    return navIcons;\r\n};\r\n\r\nexport default navIcon;","import React from 'react';\r\n\r\nconst navBadge = (props) => {\r\n    let navBadges = false;\r\n    if (props.items.badge) {\r\n        const badgeClass = ['label', 'pcoded-badge', props.items.badge.type];\r\n\r\n        navBadges = (\r\n            <span className={badgeClass.join(' ')}>\r\n                {props.items.badge.title}\r\n            </span>\r\n        );\r\n    }\r\n    return navBadges;\r\n};\r\n\r\nexport default navBadge;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavIcon from \"./../NavIcon\";\r\nimport NavBadge from \"./../NavBadge\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\n\r\nclass NavItem extends Component {\r\n\r\n    render() {\r\n        let itemTitle = this.props.item.title;\r\n        if (this.props.item.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.item.title}</span>;\r\n        }\r\n\r\n        let itemTarget = '';\r\n        if (this.props.item.target) {\r\n            itemTarget = '_blank';\r\n        }\r\n\r\n        let subContent;\r\n        if(this.props.item.external) {\r\n            subContent = (\r\n                <a href={this.props.item.url} target='_blank' rel='noopener noreferrer'>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </a>\r\n            );\r\n        } else {\r\n            subContent = (\r\n                <NavLink to={this.props.item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </NavLink>\r\n            );\r\n        }\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li onClick={this.props.onItemLeave}>{subContent}</li>\r\n            );\r\n        } else {\r\n            if (this.props.windowWidth < 992) {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes} onClick={this.props.onItemClick}>{subContent}</li>\r\n                );\r\n            } else {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes}>{subContent}</li>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onItemClick: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onItemLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavItem)));\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\nimport NavIcon from './../NavIcon';\r\nimport NavBadge from './../NavBadge';\r\nimport NavItem from \"../NavItem\";\r\nimport LoopNavCollapse from './index';\r\n\r\nclass NavCollapse extends Component {\r\n\r\n    componentDidMount() {\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOpen, isTrigger} = this.props;\r\n\r\n        let navItems = '';\r\n        if (this.props.collapse.children) {\r\n            const collapses = this.props.collapse.children;\r\n            navItems = Object.keys(collapses).map(item => {\r\n                item = collapses[item];\r\n                switch (item.type) {\r\n                    case 'collapse':\r\n                        return <LoopNavCollapse key={item.id} collapse={item} type=\"sub\" />;\r\n                    case 'item':\r\n                        return <NavItem layout={this.props.layout} key={item.id} item={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        let itemTitle = this.props.collapse.title;\r\n        if (this.props.collapse.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.collapse.title}</span>;\r\n        }\r\n\r\n        let navLinkClass = ['nav-link'];\r\n\r\n        let navItemClass = ['nav-item', 'pcoded-hasmenu'];\r\n        const openIndex = isOpen.findIndex(id => id === this.props.collapse.id);\r\n        if (openIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\r\n        if (triggerIndex > -1) {\r\n            navItemClass = [...navItemClass, 'pcoded-trigger'];\r\n        }\r\n\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const subContent = (\r\n            <Aux>\r\n                <a href={DEMO.BLANK_LINK} className={navLinkClass.join(' ')} onClick={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    <NavIcon items={this.props.collapse} />\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.collapse} />\r\n                </a>\r\n                <ul className=\"pcoded-submenu\">\r\n                    {navItems}\r\n                </ul>\r\n            </Aux>\r\n        );\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')} onMouseLeave={() => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type)} onMouseEnter={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        isOpen: state.isOpen,\r\n        isTrigger: state.isTrigger\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCollapseToggle: (id, type) => dispatch({type: actionTypes.COLLAPSE_TOGGLE, menu: {id: id, type: type}}),\r\n        onNavCollapseLeave: (id, type) => dispatch({type: actionTypes.NAV_COLLAPSE_LEAVE, menu: {id: id, type: type}})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));\r\n","import React from 'react';\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavCollapse from './../NavCollapse';\r\nimport NavItem from './../NavItem';\r\n\r\nconst navGroup = (props) => {\r\n    let navItems = '';\r\n    if (props.group.children) {\r\n        const groups = props.group.children;\r\n        navItems = Object.keys(groups).map(item => {\r\n            item = groups[item];\r\n            switch (item.type) {\r\n                case 'collapse':\r\n                    return <NavCollapse key={item.id} collapse={item} type=\"main\" />;\r\n                case 'item':\r\n                    return <NavItem layout={props.layout} key={item.id} item={item} />;\r\n                default:\r\n                    return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <li key={props.group.id} className=\"nav-item pcoded-menu-caption\"><label>{props.group.title}</label></li>\r\n            {navItems}\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default navGroup;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport NavGroup from './NavGroup';\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass NavContent extends Component {\r\n    state = {\r\n        scrollWidth: 0,\r\n        prevDisable: true,\r\n        nextDisable: false\r\n    };\r\n\r\n    scrollPrevHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth - wrapperWidth;\r\n        if(scrollWidth < 0) {\r\n            this.setState({scrollWidth: 0, prevDisable: true, nextDisable: false});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    scrollNextHandler = () => {\r\n        const wrapperWidth = document.getElementById('sidenav-wrapper').clientWidth;\r\n        const contentWidth = document.getElementById('sidenav-horizontal').clientWidth;\r\n\r\n        let scrollWidth = this.state.scrollWidth + (wrapperWidth - 80);\r\n        if (scrollWidth > (contentWidth - wrapperWidth)) {\r\n            scrollWidth = contentWidth - wrapperWidth + 80;\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false, nextDisable: true});\r\n        } else {\r\n            this.setState({scrollWidth: scrollWidth, prevDisable: false});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const navItems = this.props.navigation.map(item => {\r\n                switch (item.type) {\r\n                    case 'group':\r\n                        return <NavGroup layout={this.props.layout} key={item.id} group={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n        );\r\n\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            let prevClass = ['sidenav-horizontal-prev'];\r\n            if (this.state.prevDisable) {\r\n                prevClass = [...prevClass, 'disabled'];\r\n            }\r\n            let nextClass = ['sidenav-horizontal-next'];\r\n            if (this.state.nextDisable) {\r\n                nextClass = [...nextClass, 'disabled'];\r\n            }\r\n\r\n            mainContent = (\r\n                <div className=\"navbar-content sidenav-horizontal\" id=\"layout-sidenav\">\r\n                    <a href={DEMO.BLANK_LINK} className={prevClass.join(' ')} onClick={this.scrollPrevHandler}><span/></a>\r\n                    <div id=\"sidenav-wrapper\" className=\"sidenav-horizontal-wrapper\">\r\n                        <ul id=\"sidenav-horizontal\" className=\"nav pcoded-inner-navbar sidenav-inner\" onMouseLeave={this.props.onNavContentLeave} style={{marginLeft: '-'+this.state.scrollWidth+'px'}}>\r\n                            {navItems}\r\n                        </ul>\r\n                    </div>\r\n                    <a href={DEMO.BLANK_LINK} className={nextClass.join(' ')} onClick={this.scrollNextHandler}><span/></a>\r\n                </div>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <div className=\"navbar-content datta-scroll\">\r\n                    <PerfectScrollbar>\r\n                        <ul className=\"nav pcoded-inner-navbar\">\r\n                            {navItems}\r\n                        </ul>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onNavContentLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavContent)));\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass OutsideClick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    /**\r\n     * close menu if clicked on outside of element\r\n     */\r\n    handleOutsideClick(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n                this.props.onToggleNavigation();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"nav-outside\" ref={this.setWrapperRef}>{this.props.children}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(OutsideClick));","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavLogo from './NavLogo';\r\nimport NavContent from './NavContent';\r\nimport OutsideClick from './OutsideClick';\r\nimport Aux from './../../../../hoc/_Aux'\r\nimport * as actionTypes from './../../../../store/actions';\r\n// import navigation from '../../../../menu-items';\r\nimport BackendService from \"../../../../services/BackendService\";\r\n\r\n\r\nconst navigation={items:BackendService.validateMenu()};\r\nclass Navigation extends Component {\r\n\r\n    resize = () => {\r\n        const contentWidth = document.getElementById('root').clientWidth;\r\n\r\n        if (this.props.layout === 'horizontal' && contentWidth < 992) {\r\n            this.props.onChangeLayout('vertical');\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resize();\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    render() {\r\n        let navClass = [\r\n            'pcoded-navbar',\r\n        ];\r\n\r\n        if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\r\n            navClass = [...navClass, this.props.preLayout];\r\n        } else {\r\n            navClass = [\r\n                ...navClass,\r\n                this.props.layoutType,\r\n                this.props.navBackColor,\r\n                this.props.navBrandColor,\r\n                'drp-icon-'+this.props.navDropdownIcon,\r\n                'menu-item-icon-'+this.props.navListIcon,\r\n                this.props.navActiveListColor,\r\n                this.props.navListTitleColor,\r\n            ];\r\n\r\n            if (this.props.layout === 'horizontal') {\r\n                navClass = [...navClass, 'theme-horizontal'];\r\n            }\r\n\r\n            if (this.props.navBackImage) {\r\n                navClass = [...navClass, this.props.navBackImage];\r\n            }\r\n\r\n            if (this.props.navIconColor) {\r\n                navClass = [...navClass, 'icon-colored'];\r\n            }\r\n\r\n            if (!this.props.navFixedLayout) {\r\n                navClass = [...navClass, 'menupos-static'];\r\n            }\r\n\r\n            if (this.props.navListTitleHide) {\r\n                navClass = [...navClass, 'caption-hide'];\r\n            }\r\n        }\r\n\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            navClass = [...navClass, 'mob-open'];\r\n        } else if (this.props.collapseMenu) {\r\n            navClass = [...navClass, 'navbar-collapsed'];\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-6') {\r\n            document.body.classList.add('layout-6');\r\n            document.body.style.backgroundImage = this.props.layout6Background;\r\n            document.body.style.backgroundSize = this.props.layout6BackSize;\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-8') {\r\n            document.body.classList.add('layout-8');\r\n        }\r\n\r\n        if (this.props.layoutType === 'dark') {\r\n            document.body.classList.add('datta-dark');\r\n        } else {\r\n            document.body.classList.remove('datta-dark');\r\n        }\r\n\r\n        if (this.props.rtlLayout) {\r\n            document.body.classList.add('datta-rtl');\r\n        } else {\r\n            document.body.classList.remove('datta-rtl');\r\n        }\r\n\r\n        if (this.props.boxLayout) {\r\n            document.body.classList.add('container');\r\n            document.body.classList.add('box-layout');\r\n        } else {\r\n            document.body.classList.remove('container');\r\n            document.body.classList.remove('box-layout');\r\n        }\r\n\r\n        let navContent = (\r\n            <div className=\"navbar-wrapper\">\r\n                <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                <NavContent navigation={navigation.items} />\r\n            </div>\r\n        );\r\n        if (this.props.windowWidth < 992) {\r\n            navContent = (\r\n                <OutsideClick>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                        <NavContent navigation={navigation.items} />\r\n                    </div>\r\n                </OutsideClick>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <nav className={navClass.join(' ')}>\r\n                    {navContent}\r\n                </nav>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        preLayout: state.preLayout,\r\n        collapseMenu: state.collapseMenu,\r\n        layoutType: state.layoutType,\r\n        navBackColor: state.navBackColor,\r\n        navBackImage: state.navBackImage,\r\n        navIconColor: state.navIconColor,\r\n        navBrandColor: state.navBrandColor,\r\n        layout6Background: state.layout6Background,\r\n        layout6BackSize: state.layout6BackSize,\r\n        rtlLayout: state.rtlLayout,\r\n        navFixedLayout: state.navFixedLayout,\r\n        boxLayout: state.boxLayout,\r\n        navDropdownIcon: state.navDropdownIcon,\r\n        navListIcon: state.navListIcon,\r\n        navActiveListColor: state.navActiveListColor,\r\n        navListTitleColor: state.navListTitleColor,\r\n        navListTitleHide: state.navListTitleHide\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onChangeLayout: (layout) => dispatch({type: actionTypes.CHANGE_LAYOUT, layout: layout}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));\r\n","import React, {Component} from 'react';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../../store/constant\";\r\n\r\nclass NavSearch extends Component {\r\n    state = {\r\n        searchWidth: (this.props.windowWidth < 992) ? 90 : 0,\r\n        searchString: (this.props.windowWidth < 992) ? '90px' : '',\r\n        isOpen: (this.props.windowWidth < 992)\r\n    };\r\n\r\n    searchOnHandler = () => {\r\n        this.setState({isOpen: true});\r\n        const searchInterval = setInterval(() => {\r\n            if (this.state.searchWidth >= 91) {\r\n                clearInterval(searchInterval);\r\n                return false;\r\n            }\r\n            this.setState(prevSate => {\r\n                return {\r\n                    searchWidth: prevSate.searchWidth + 15,\r\n                    searchString: prevSate.searchWidth + 'px'\r\n                }\r\n            });\r\n        }, 35);\r\n    };\r\n\r\n    searchOffHandler = () => {\r\n        const searchInterval = setInterval(() => {\r\n            if (this.state.searchWidth < 0) {\r\n                this.setState({isOpen: false});\r\n                clearInterval(searchInterval);\r\n                return false;\r\n            }\r\n            this.setState(prevSate => {\r\n                return {\r\n                    searchWidth: prevSate.searchWidth - 15,\r\n                    searchString: prevSate.searchWidth + 'px'\r\n                }\r\n            });\r\n        }, 35);\r\n    };\r\n\r\n    render() {\r\n        let searchClass = ['main-search'];\r\n        if (this.state.isOpen) {\r\n            searchClass = [...searchClass, 'open'];\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <div id=\"main-search\" className={searchClass.join(' ')}>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" id=\"m-search\" className=\"form-control\" placeholder=\"Search . . .\" style={{width: this.state.searchString}}/>\r\n                        <a href={DEMO.BLANK_LINK} className=\"input-group-append search-close\" onClick={this.searchOffHandler}>\r\n                            <i className=\"feather icon-x input-group-text\"/>\r\n                        </a>\r\n                        <span className=\"input-group-append search-btn btn btn-primary\" onClick={this.searchOnHandler}>\r\n                        <i className=\"feather icon-search input-group-text\"/>\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(NavSearch);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavSearch from './NavSearch';\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass NavLeft extends Component {\r\n\r\n    render() {\r\n        let iconFullScreen = ['feather'];\r\n        iconFullScreen = (this.props.isFullScreen) ? [...iconFullScreen, 'icon-minimize'] : [...iconFullScreen, 'icon-maximize'];\r\n\r\n        let navItemClass = ['nav-item'];\r\n        if (this.props.windowWidth <= 575) {\r\n            navItemClass = [...navItemClass, 'd-none'];\r\n        }\r\n        let dropdownRightAlign = false;\r\n        if (this.props.rtlLayout) {\r\n            dropdownRightAlign = true;\r\n        }\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n\r\n                </ul>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFullScreen: state.isFullScreen,\r\n        rtlLayout: state.rtlLayout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreen: () => dispatch({type: actionTypes.FULL_SCREEN}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport NavLeft from \"./NavLeft\";\r\nimport NavRight from \"./NavRight\";\r\nimport Aux from \"../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../store/actions\";\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        let headerClass = ['navbar', 'pcoded-header', 'navbar-expand-lg', this.props.headerBackColor];\r\n        if (this.props.headerFixedLayout) {\r\n            headerClass = [...headerClass, 'headerpos-fixed'];\r\n        }\r\n\r\n        let toggleClass = ['mobile-menu'];\r\n        if (this.props.collapseMenu) {\r\n            toggleClass = [...toggleClass, 'on'];\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <header className={headerClass.join(' ')}>\r\n                    <div className=\"m-header\">\r\n                        <a className={toggleClass.join(' ')} id=\"mobile-collapse1\" href={DEMO.BLANK_LINK} onClick={this.props.onToggleNavigation}><span/></a>\r\n                        <a href={DEMO.BLANK_LINK} className=\"b-brand\">\r\n                            {/* <div className=\"b-bg\">\r\n                                <i className=\"feather icon-trending-up\"/>\r\n                            </div> */}\r\n                            <span className=\"b-title\"> ENZI HUB JOB DESK PORTAL</span>\r\n                        </a>\r\n                    </div>\r\n\r\n                </header>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rtlLayout: state.rtlLayout,\r\n        headerBackColor: state.headerBackColor,\r\n        headerFixedLayout: state.headerFixedLayout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (NavBar);\r\n","import React, { Component, Suspense } from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Navigation from './Navigation';\r\nimport NavBar from './NavBar';\r\nimport Breadcrumb from './Breadcrumb';\r\nimport Loader from \"../Loader\";\r\nimport routes from \"../../../routes\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport './app.scss';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n    fullScreenExitHandler = () => {\r\n        if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\r\n            this.props.onFullScreenExit();\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.props.windowWidth > 992 && this.props.windowWidth <= 1024 && this.props.layout !== 'horizontal') {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    mobileOutClickHandler() {\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            this.props.onComponentWillMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /* full screen exit call */\r\n        document.addEventListener('fullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('webkitfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('mozfullscreenchange', this.fullScreenExitHandler);\r\n        document.addEventListener('MSFullscreenChange', this.fullScreenExitHandler);\r\n\r\n        const menu = routes.map((route, index) => {\r\n            return (route.component) ? (\r\n                <Route\r\n                    key={index}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={props => (\r\n                        <route.component {...props} />\r\n                    )} />\r\n            ) : (null);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Fullscreen enabled={this.props.isFullScreen}>\r\n                    <Navigation />\r\n                    {/*<NavBar />*/}\r\n                    <div className=\"pcoded-main-container\" onClick={() => this.mobileOutClickHandler}>\r\n                        <div className=\"pcoded-wrapper\">\r\n                            <div className=\"pcoded-content\">\r\n                                <div className=\"pcoded-inner-content\">\r\n                                    <Breadcrumb />\r\n                                    <div className=\"main-body\">\r\n                                        <div className=\"page-wrapper\">\r\n                                            <Suspense fallback={<Loader/>}>\r\n                                                <Switch>\r\n                                                    {menu}\r\n                                                    <Redirect from=\"/\" to={this.props.defaultPath} />\r\n                                                </Switch>\r\n                                            </Suspense>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fullscreen>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        defaultPath: state.defaultPath,\r\n        isFullScreen: state.isFullScreen,\r\n        collapseMenu: state.collapseMenu,\r\n        configBlock: state.configBlock,\r\n        layout: state.layout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreenExit: () => dispatch({type: actionTypes.FULL_SCREEN_EXIT}),\r\n        onComponentWillMount: () => dispatch({type: actionTypes.COLLAPSE_MENU})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(AdminLayout));"],"sourceRoot":""}